{
  "name": "teko",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "statement_with_semicolon"
      }
    },
    "statement_with_semicolon": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "statement"
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "statement": {
      "type": "PREC_RIGHT",
      "value": 0,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "declaration"
          },
          {
            "type": "SYMBOL",
            "name": "namespace"
          },
          {
            "type": "SYMBOL",
            "name": "expression"
          }
        ]
      }
    },
    "namespace": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "namespace"
        },
        {
          "type": "SYMBOL",
          "name": "codeblock"
        }
      ]
    },
    "declaration": {
      "type": "PREC",
      "value": 2,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "REPEAT",
            "content": {
              "type": "SYMBOL",
              "name": "annotation"
            }
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "STRING",
                "value": "async"
              },
              {
                "type": "BLANK"
              }
            ]
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "STRING",
                "value": "var"
              },
              {
                "type": "BLANK"
              }
            ]
          },
          {
            "type": "SYMBOL",
            "name": "prefix_expression"
          },
          {
            "type": "REPEAT",
            "content": {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "declared"
                },
                {
                  "type": "STRING",
                  "value": ","
                }
              ]
            }
          },
          {
            "type": "SYMBOL",
            "name": "declared"
          }
        ]
      }
    },
    "annotation": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "@IO"
        },
        {
          "type": "STRING",
          "value": "@hangs"
        },
        {
          "type": "STRING",
          "value": "@updates"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "@sees"
            },
            {
              "type": "SYMBOL",
              "name": "annotation_params"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "@modifies"
            },
            {
              "type": "SYMBOL",
              "name": "annotation_params"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "@throws"
            },
            {
              "type": "SYMBOL",
              "name": "annotation_params"
            }
          ]
        }
      ]
    },
    "annotation_params": {
      "type": "SEQ",
      "members": [
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "label"
              },
              {
                "type": "STRING",
                "value": ","
              }
            ]
          }
        },
        {
          "type": "SYMBOL",
          "name": "label"
        }
      ]
    },
    "declared": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "label"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "assignment_predicate"
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "assignment_predicate": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "STRING",
                  "value": "="
                },
                {
                  "type": "STRING",
                  "value": "+="
                },
                {
                  "type": "STRING",
                  "value": "-="
                },
                {
                  "type": "STRING",
                  "value": "*="
                },
                {
                  "type": "STRING",
                  "value": "/="
                },
                {
                  "type": "STRING",
                  "value": "%="
                },
                {
                  "type": "STRING",
                  "value": "^="
                },
                {
                  "type": "STRING",
                  "value": "=&"
                }
              ]
            },
            {
              "type": "SYMBOL",
              "name": "expression"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "->"
            },
            {
              "type": "SYMBOL",
              "name": "codeblock"
            }
          ]
        }
      ]
    },
    "codeblock": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "statement"
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "{"
            },
            {
              "type": "REPEAT",
              "content": {
                "type": "SYMBOL",
                "name": "statement_with_semicolon"
              }
            },
            {
              "type": "STRING",
              "value": "}"
            }
          ]
        }
      ]
    },
    "expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "SYMBOL",
              "name": "tight_expression"
            },
            {
              "type": "SYMBOL",
              "name": "assignment_predicate"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "comparison_expression"
        },
        {
          "type": "SYMBOL",
          "name": "if_expression"
        },
        {
          "type": "SYMBOL",
          "name": "for_expression"
        },
        {
          "type": "SYMBOL",
          "name": "while_expression"
        }
      ]
    },
    "comparison_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "comparison_expression"
                },
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "STRING",
                      "value": "=="
                    },
                    {
                      "type": "STRING",
                      "value": "!="
                    },
                    {
                      "type": "STRING",
                      "value": "<"
                    },
                    {
                      "type": "STRING",
                      "value": ">"
                    },
                    {
                      "type": "STRING",
                      "value": "<="
                    },
                    {
                      "type": "STRING",
                      "value": ">="
                    },
                    {
                      "type": "STRING",
                      "value": "<:"
                    }
                  ]
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "boolean_expression"
        }
      ]
    },
    "boolean_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "boolean_expression"
                },
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "STRING",
                      "value": "&"
                    },
                    {
                      "type": "STRING",
                      "value": "|"
                    },
                    {
                      "type": "STRING",
                      "value": "in"
                    },
                    {
                      "type": "STRING",
                      "value": "to"
                    }
                  ]
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "additive_expression"
        }
      ]
    },
    "additive_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "additive_expression"
                },
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "STRING",
                      "value": "+"
                    },
                    {
                      "type": "STRING",
                      "value": "-"
                    }
                  ]
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "multiplicative_expression"
        }
      ]
    },
    "multiplicative_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "multiplicative_expression"
                },
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "STRING",
                      "value": "*"
                    },
                    {
                      "type": "STRING",
                      "value": "/"
                    },
                    {
                      "type": "STRING",
                      "value": "%"
                    }
                  ]
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "exponential_expression"
        }
      ]
    },
    "exponential_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "exponential_expression"
                },
                {
                  "type": "CHOICE",
                  "members": [
                    {
                      "type": "STRING",
                      "value": "^"
                    }
                  ]
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "prefix_expression"
        }
      ]
    },
    "prefix_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "STRING",
                  "value": "!"
                },
                {
                  "type": "STRING",
                  "value": "~"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "tight_expression"
        }
      ]
    },
    "tight_expression": {
      "type": "PREC",
      "value": 1,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SYMBOL",
            "name": "atomic_expression"
          },
          {
            "type": "SYMBOL",
            "name": "attribute"
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "tight_expression"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "STRING",
                    "value": "."
                  },
                  {
                    "type": "STRING",
                    "value": "$"
                  },
                  {
                    "type": "STRING",
                    "value": "#"
                  },
                  {
                    "type": "STRING",
                    "value": "++"
                  },
                  {
                    "type": "STRING",
                    "value": "--"
                  }
                ]
              }
            ]
          },
          {
            "type": "SYMBOL",
            "name": "struct"
          },
          {
            "type": "SYMBOL",
            "name": "args"
          },
          {
            "type": "SYMBOL",
            "name": "sequence"
          }
        ]
      }
    },
    "attribute": {
      "type": "PREC",
      "value": 2,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "tight_expression"
              },
              {
                "type": "STRING",
                "value": "."
              },
              {
                "type": "SYMBOL",
                "name": "label"
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "tight_expression"
              },
              {
                "type": "SYMBOL",
                "name": "args"
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "tight_expression"
              },
              {
                "type": "SYMBOL",
                "name": "sequence"
              }
            ]
          }
        ]
      }
    },
    "struct": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "struct_elem"
              },
              {
                "type": "STRING",
                "value": ","
              }
            ]
          }
        },
        {
          "type": "SYMBOL",
          "name": "struct_elem"
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "struct_elem": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "prefix_expression"
        },
        {
          "type": "SYMBOL",
          "name": "label"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "?"
                },
                {
                  "type": "SYMBOL",
                  "name": "expression"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        }
      ]
    },
    "args": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "REPEAT",
                  "content": {
                    "type": "SEQ",
                    "members": [
                      {
                        "type": "SYMBOL",
                        "name": "arg"
                      },
                      {
                        "type": "STRING",
                        "value": ","
                      }
                    ]
                  }
                },
                {
                  "type": "SYMBOL",
                  "name": "arg"
                }
              ]
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "arg": {
      "type": "SEQ",
      "members": [
        {
          "type": "PREC",
          "value": 1,
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "SEQ",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "label"
                  },
                  {
                    "type": "STRING",
                    "value": "="
                  }
                ]
              },
              {
                "type": "BLANK"
              }
            ]
          }
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        }
      ]
    },
    "sequence": {
      "type": "PREC",
      "value": -1,
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "{"
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "sequence_body"
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              },
              {
                "type": "STRING",
                "value": "}"
              }
            ]
          },
          {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "["
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "sequence_body"
                  },
                  {
                    "type": "BLANK"
                  }
                ]
              },
              {
                "type": "STRING",
                "value": "]"
              }
            ]
          }
        ]
      }
    },
    "sequence_body": {
      "type": "SEQ",
      "members": [
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "SYMBOL",
                "name": "expression"
              },
              {
                "type": "STRING",
                "value": ","
              }
            ]
          }
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        }
      ]
    },
    "atomic_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "known_type"
        },
        {
          "type": "SYMBOL",
          "name": "label"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        },
        {
          "type": "SYMBOL",
          "name": "char"
        },
        {
          "type": "SYMBOL",
          "name": "num"
        },
        {
          "type": "SYMBOL",
          "name": "bool"
        },
        {
          "type": "SYMBOL",
          "name": "bits"
        },
        {
          "type": "SYMBOL",
          "name": "bytes"
        }
      ]
    },
    "known_type": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "let"
        },
        {
          "type": "STRING",
          "value": "type"
        },
        {
          "type": "STRING",
          "value": "obj"
        },
        {
          "type": "STRING",
          "value": "int"
        },
        {
          "type": "STRING",
          "value": "real"
        },
        {
          "type": "STRING",
          "value": "str"
        },
        {
          "type": "STRING",
          "value": "char"
        },
        {
          "type": "STRING",
          "value": "bool"
        },
        {
          "type": "STRING",
          "value": "bits"
        },
        {
          "type": "STRING",
          "value": "bytes"
        },
        {
          "type": "STRING",
          "value": "label"
        },
        {
          "type": "STRING",
          "value": "unit"
        },
        {
          "type": "STRING",
          "value": "struct"
        },
        {
          "type": "STRING",
          "value": "enum"
        }
      ]
    },
    "label": {
      "type": "PATTERN",
      "value": "[a-zA-Z_][a-zA-Z0-9_]*"
    },
    "string": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "\""
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "character"
          }
        },
        {
          "type": "STRING",
          "value": "\""
        }
      ]
    },
    "char": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "'"
        },
        {
          "type": "SYMBOL",
          "name": "character"
        },
        {
          "type": "STRING",
          "value": "'"
        }
      ]
    },
    "character": {
      "type": "IMMEDIATE_TOKEN",
      "content": {
        "type": "CHOICE",
        "members": [
          {
            "type": "PREC",
            "value": 1,
            "content": {
              "type": "PATTERN",
              "value": "[^\"\\n\\\\]"
            }
          },
          {
            "type": "STRING",
            "value": "\\\\"
          },
          {
            "type": "STRING",
            "value": "\\\""
          },
          {
            "type": "STRING",
            "value": "\\'"
          },
          {
            "type": "STRING",
            "value": "\\n"
          },
          {
            "type": "STRING",
            "value": "\\t"
          },
          {
            "type": "PATTERN",
            "value": "\\\\x[0-9a-fA-F]{2}"
          }
        ]
      }
    },
    "num": {
      "type": "PATTERN",
      "value": "-?[0-9]+\\.?[0-9]*"
    },
    "bool": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "true"
        },
        {
          "type": "STRING",
          "value": "false"
        }
      ]
    },
    "bits": {
      "type": "PATTERN",
      "value": "0b[01]+"
    },
    "bytes": {
      "type": "PATTERN",
      "value": "0x[0-9a-fA-F]+"
    },
    "if_expression": {
      "type": "PREC_RIGHT",
      "value": 0,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "PREC",
                "value": -1,
                "content": {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "SYMBOL",
                      "name": "expression"
                    },
                    {
                      "type": "STRING",
                      "value": "?"
                    }
                  ]
                }
              },
              {
                "type": "SEQ",
                "members": [
                  {
                    "type": "STRING",
                    "value": "if"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "expression"
                  }
                ]
              }
            ]
          },
          {
            "type": "SYMBOL",
            "name": "codeblock"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SEQ",
                "members": [
                  {
                    "type": "CHOICE",
                    "members": [
                      {
                        "type": "STRING",
                        "value": ":"
                      },
                      {
                        "type": "STRING",
                        "value": "else"
                      }
                    ]
                  },
                  {
                    "type": "SYMBOL",
                    "name": "codeblock"
                  }
                ]
              },
              {
                "type": "BLANK"
              }
            ]
          }
        ]
      }
    },
    "while_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "while"
        },
        {
          "type": "SYMBOL",
          "name": "expression"
        },
        {
          "type": "SYMBOL",
          "name": "codeblock"
        }
      ]
    },
    "for_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "for"
            },
            {
              "type": "STRING",
              "value": "parallel"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "for_setup"
            },
            {
              "type": "SEQ",
              "members": [
                {
                  "type": "STRING",
                  "value": "("
                },
                {
                  "type": "SYMBOL",
                  "name": "for_setup"
                },
                {
                  "type": "STRING",
                  "value": ")"
                }
              ]
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "codeblock"
        }
      ]
    },
    "for_setup": {
      "type": "PREC",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "prefix_expression"
              },
              {
                "type": "BLANK"
              }
            ]
          },
          {
            "type": "SYMBOL",
            "name": "label"
          },
          {
            "type": "STRING",
            "value": "in"
          },
          {
            "type": "SYMBOL",
            "name": "expression"
          }
        ]
      }
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    }
  ],
  "conflicts": [],
  "externals": [],
  "inline": []
}
